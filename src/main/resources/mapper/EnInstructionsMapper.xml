<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.cymall.dao.EnInstructionsDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="xin.cymall.entity.EnInstructions" id="enInstructionsMap">
        <result property="id" column="id"/>
        <result property="instructions" column="instructions"/>
        <result property="instructionsName" column="instructions_name"/>
        <result property="instructionsType" column="instructions_type"/>
        <result property="instructionsUnit" column="instructions_unit"/>
        <result property="createUser" column="create_user"/>
        <result property="createTime" column="create_time"/>
        <result property="updateUser" column="update_user"/>
        <result property="updateTime" column="update_time"/>
        <result property="delFlag" column="del_flag"/>
    </resultMap>

	<select id="queryObject" resultType="xin.cymall.entity.EnInstructions">
		select * from en_instructions where id = #{value}
	</select>

	<select id="queryList" resultType="xin.cymall.entity.EnInstructions">
		select * from en_instructions t
		<include refid="where_clause" />

		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from en_instructions t  <include refid="where_clause" />
	</select>

	<select id="queryListAll" resultType="xin.cymall.entity.EnInstructions">
		select * from en_instructions t
		where t.instructions_type = #{instructionsType}
		order by t.create_time
	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1

            <if test="instructionsName != null and instructionsName != ''"> and t.instructions_name like concat('%',#{instructionsName},'%')  </if>
            <if test="instructionsType != null and instructionsType != ''"> and t.instructions_type = #{instructionsType} </if>
        </where>
    </sql>

	<insert id="save" parameterType="xin.cymall.entity.EnInstructions">
		insert into en_instructions
		(
			`id`, 
			`instructions`, 
			`instructions_name`, 
			`instructions_type`, 
			`instructions_unit`, 
			`create_user`, 
			`create_time`, 
			`update_user`, 
			`update_time`, 
			`del_flag`
		)
		values
		(
			#{id}, 
			#{instructions}, 
			#{instructionsName}, 
			#{instructionsType}, 
			#{instructionsUnit}, 
			#{createUser}, 
			#{createTime}, 
			#{updateUser}, 
			#{updateTime}, 
			#{delFlag}
		)
	</insert>
	 
	<update id="update" parameterType="xin.cymall.entity.EnInstructions">
		update en_instructions 
		<set>
			<if test="instructions != null">`instructions` = #{instructions}, </if>
			<if test="instructionsName != null">`instructions_name` = #{instructionsName}, </if>
			<if test="instructionsType != null">`instructions_type` = #{instructionsType}, </if>
			<if test="instructionsUnit != null">`instructions_unit` = #{instructionsUnit}, </if>
			<if test="createUser != null">`create_user` = #{createUser}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateUser != null">`update_user` = #{updateUser}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from en_instructions where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from en_instructions where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>