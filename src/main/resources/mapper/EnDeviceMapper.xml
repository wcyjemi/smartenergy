<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.cymall.dao.EnDeviceDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="xin.cymall.entity.EnDevice" id="enDeviceMap">
        <result property="id" column="id"/>
        <result property="deviceName" column="device_name"/>
        <result property="deviceNo" column="device_no"/>
        <result property="deviceBrand" column="device_brand"/>
        <result property="deviceModel" column="device_model"/>
        <result property="companyId" column="company_id"/>
		<result property="companyName" column="company_name"/>
        <result property="productDate" column="product_date"/>
        <result property="installDate" column="install_date"/>
        <result property="nominalPower" column="nominal_power"/>
        <result property="deviceStatus" column="device_status"/>
        <result property="createUser" column="create_user"/>
        <result property="createTime" column="create_time"/>
        <result property="updateUser" column="update_user"/>
        <result property="updateTime" column="update_time"/>
        <result property="delFlag" column="del_flag"/>
    </resultMap>

	<select id="queryObject" resultType="xin.cymall.entity.EnDevice">
		SELECT
			t.id,
			t.device_name,
			t.device_no,
			t.device_brand,
			t.device_model,
			t.company_id,
			c.company_name,
			DATE_FORMAT( t.product_date, '%Y-%m-%d' ) product_date,
			DATE_FORMAT( t.install_date, '%Y-%m-%d' ) install_date,
			t.nominal_power,
			t.device_status,
			t.create_time
		FROM
			en_device t
		LEFT JOIN en_company c on t.company_id = c.id where t.id = #{value}
	</select>

	<select id="queryList" resultType="xin.cymall.entity.EnDevice">
		SELECT
			t.id,
			t.device_name,
			t.device_no,
			t.device_brand,
			t.device_model,
			t.company_id,
			c.company_name,
			DATE_FORMAT( t.product_date, '%Y-%m-%d' ) product_date,
			DATE_FORMAT( t.install_date, '%Y-%m-%d' ) install_date,
			t.nominal_power,
			t.device_status,
			t.create_time
		FROM
			en_device t
		LEFT JOIN en_company c on t.company_id = c.id
		<include refid="where_clause" />
		order by t.create_time desc, t.device_status
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(1) from 	en_device t
		LEFT JOIN en_company c on t.company_id = c.id  <include refid="where_clause" />
	</select>

    <select id="queryAllList" resultType="xin.cymall.common.utils.EnumBean">
        SELECT
        t.id code,
        t.device_name value
        FROM
        en_device t
        LEFT JOIN en_company c on t.company_id = c.id
    </select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
    		<if test="deviceName != null and deviceName != ''"> and t.device_name like concat('%',#{deviceNameVague},'%') </if>
			<if test="companyName != null and companyName != ''"> and c.company_name like concat('%',#{companyName},'%') </if>
            <if test="deviceStatus != null and deviceStatus != ''"> and t.device_status = #{deviceStatus} </if>
        </where>
    </sql>
	 
	<insert id="save" parameterType="xin.cymall.entity.EnDevice" useGeneratedKeys="true" keyProperty="id">
		insert into en_device
		(
			id,
			`device_name`, 
			`device_no`, 
			`device_brand`, 
			`device_model`, 
			`company_id`, 
			`product_date`, 
			`install_date`, 
			`nominal_power`, 
			`device_status`, 
			`create_user`, 
			`create_time`, 
			`update_user`, 
			`update_time`, 
			`del_flag`
		)
		values
		(
			#{id},
			#{deviceName}, 
			#{deviceNo}, 
			#{deviceBrand}, 
			#{deviceModel}, 
			#{companyId}, 
			#{productDate}, 
			#{installDate}, 
			#{nominalPower}, 
			#{deviceStatus}, 
			#{createUser}, 
			#{createTime}, 
			#{updateUser}, 
			#{updateTime}, 
			#{delFlag}
		)
	</insert>
	 
	<update id="update" parameterType="xin.cymall.entity.EnDevice">
		update en_device 
		<set>
			<if test="deviceName != null">`device_name` = #{deviceName}, </if>
			<if test="deviceNo != null">`device_no` = #{deviceNo}, </if>
			<if test="deviceBrand != null">`device_brand` = #{deviceBrand}, </if>
			<if test="deviceModel != null">`device_model` = #{deviceModel}, </if>
			<if test="companyId != null">`company_id` = #{companyId}, </if>
			<if test="productDate != null">`product_date` = #{productDate}, </if>
			<if test="installDate != null">`install_date` = #{installDate}, </if>
			<if test="nominalPower != null">`nominal_power` = #{nominalPower}, </if>
			<if test="deviceStatus != null">`device_status` = #{deviceStatus}, </if>
			<if test="createUser != null">`create_user` = #{createUser}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateUser != null">`update_user` = #{updateUser}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from en_device where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from en_device where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>