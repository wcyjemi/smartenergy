<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.cymall.dao.EnMaintainPlanDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="xin.cymall.entity.EnMaintainPlan" id="enMaintainPlanMap">
        <result property="id" column="id"/>
        <result property="deviceId" column="device_id"/>
        <result property="deviceName" column="device_name"/>
        <result property="planName" column="plan_name"/>
        <result property="planSt" column="plan_st"/>
        <result property="panEd" column="pan_ed"/>
        <result property="contact" column="contact"/>
        <result property="contactPhone" column="contact_phone"/>
        <result property="maintRs" column="maint_rs"/>
        <result property="maintFile" column="maint_file"/>
        <result property="planStatus" column="plan_status"/>
        <result property="createUser" column="create_user"/>
        <result property="createTime" column="create_time"/>
        <result property="updateUser" column="update_user"/>
        <result property="updateTime" column="update_time"/>
        <result property="delFlag" column="del_flag"/>
    </resultMap>

	<select id="queryObject" resultType="xin.cymall.entity.EnMaintainPlan">
		SELECT
			t.id,
			t.device_id,
			t.device_name,
			t.plan_name,
			DATE_FORMAT( t.plan_st, '%Y-%m-%d' ) plan_st,
			DATE_FORMAT( t.pan_ed, '%Y-%m-%d' ) pan_ed,
			t.contact,
			t.contact_phone,
			t.maint_rs,
			t.maint_file,
			t.plan_status
		FROM
			en_maintain_plan t
	 where id = #{value}
	</select>

	<select id="queryList" resultType="xin.cymall.entity.EnMaintainPlan">
		SELECT
		t.id,
		t.device_id,
		t.device_name,
		t.plan_name,
		DATE_FORMAT( t.plan_st, '%Y-%m-%d' ) plan_st,
		DATE_FORMAT( t.pan_ed, '%Y-%m-%d' ) pan_ed,
		t.contact,
		t.contact_phone,
		t.maint_rs,
		t.maint_file,
		t.plan_status
		FROM
		en_maintain_plan t
		<include refid="where_clause" />
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(1) from en_maintain_plan t  <include refid="where_clause" />
	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
    		<if test="deviceName != null and deviceName != ''"> and t.device_name like concat('%',#{deviceNameVague},'%') </if>
            <if test="planName != null and planName != ''"> and t.plan_name  like concat('%',#{planName},'%') </if>
            <if test="planStatus != null and planStatus != ''"> and t.plan_status = #{planStatus} </if>

        </where>
    </sql>
	 
	<insert id="save" parameterType="xin.cymall.entity.EnMaintainPlan" useGeneratedKeys="true" keyProperty="id">
		insert into en_maintain_plan
		(
			id,
			`device_id`, 
			`device_name`, 
			`plan_name`, 
			`plan_st`, 
			`pan_ed`, 
			`contact`, 
			`contact_phone`, 
			`maint_rs`, 
			`maint_file`, 
			`plan_status`, 
			`create_user`, 
			`create_time`, 
			`update_user`, 
			`update_time`, 
			`del_flag`
		)
		values
		(
			#{id},
			#{deviceId}, 
			(select d.device_name from en_device d where d.id =  #{deviceId}),
			#{planName}, 
			#{planSt}, 
			#{panEd}, 
			#{contact}, 
			#{contactPhone}, 
			#{maintRs}, 
			#{maintFile}, 
			#{planStatus}, 
			#{createUser}, 
			#{createTime}, 
			#{updateUser}, 
			#{updateTime}, 
			#{delFlag}
		)
	</insert>
	 
	<update id="update" parameterType="xin.cymall.entity.EnMaintainPlan">
		update en_maintain_plan 
		<set>
			<if test="deviceId != null">`device_id` = #{deviceId}, </if>
			<if test="deviceId != null">`device_name` = (select d.device_name from en_device d where d.id =  #{deviceId}), </if>
			<if test="planName != null">`plan_name` = #{planName}, </if>
			<if test="planSt != null">`plan_st` = #{planSt}, </if>
			<if test="panEd != null">`pan_ed` = #{panEd}, </if>
			<if test="contact != null">`contact` = #{contact}, </if>
			<if test="contactPhone != null">`contact_phone` = #{contactPhone}, </if>
			<if test="maintRs != null">`maint_rs` = #{maintRs}, </if>
			<if test="maintFile != null">`maint_file` = #{maintFile}, </if>
			<if test="planStatus != null">`plan_status` = #{planStatus}, </if>
			<if test="createUser != null">`create_user` = #{createUser}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateUser != null">`update_user` = #{updateUser}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from en_maintain_plan where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from en_maintain_plan where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>