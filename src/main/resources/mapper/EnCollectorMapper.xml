<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xin.cymall.dao.EnCollectorDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="xin.cymall.entity.EnCollector" id="enCollectorMap">
        <result property="id" column="id"/>
        <result property="collectorName" column="collector_name"/>
        <result property="collectorModel" column="collector_model"/>
        <result property="concentratorId" column="concentrator_id"/>
        <result property="createUser" column="create_user"/>
        <result property="createTime" column="create_time"/>
        <result property="updateUser" column="update_user"/>
        <result property="updateTime" column="update_time"/>
        <result property="delFlag" column="del_flag"/>
    </resultMap>



	<select id="queryObject" resultType="xin.cymall.entity.EnCollector">
		select t.* ,ec.concentrator_name as concentratorName from en_collector  t
		left join en_concentrator ec on ec.id = t.concentrator_id
		 where t.id = #{value}
	</select>

	<select id="queryList" resultType="xin.cymall.entity.EnCollector">
		select 	t.id,
		t.collector_model,
		t.collector_name,
		t.concentrator_id,
		t.create_time,
		su.username createUsers,
		t.del_flag,
		t.update_time,
		su2.username as updateUsers,ec.concentrator_name as concentratorName from en_collector t left join sys_user su on t.create_user = su.user_id
		left join  sys_user su2 on t.update_user = su2.user_id
		left join en_concentrator ec on ec.id = t.concentrator_id
		<where>
			t.del_flag = 0
			<if test="createUser != null">
				and t.`create_user` = #{createUser}
			</if>
			<if test="collectorName != null and collectorName.trim() != ''">
				and t.`collector_name` like concat('%',#{collectorName},'%')
			</if>
		</where>

        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by t.id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="getCount" resultType="int">
		select count(*) from en_collector t  <include refid="where_clause" />
	</select>

    <!-- 搜索数据区域 -->
    <sql id="where_clause">
        <where>
            1=1
            <if test="id != null and id != ''"> and t.id = #{id} </if>
    		<if test="idVague != null and idVague != ''"> and t.id like concat('%',#{idVague},'%') </if>
            <if test="collectorName != null and collectorName != ''"> and t.collector_name = #{collectorName} </if>
    		<if test="collectorNameVague != null and collectorNameVague != ''"> and t.collector_name like concat('%',#{collectorNameVague},'%') </if>
            <if test="collectorModel != null and collectorModel != ''"> and t.collector_model = #{collectorModel} </if>
    		<if test="collectorModelVague != null and collectorModelVague != ''"> and t.collector_model like concat('%',#{collectorModelVague},'%') </if>
            <if test="concentratorId != null and concentratorId != ''"> and t.concentrator_id = #{concentratorId} </if>
    		<if test="concentratorIdVague != null and concentratorIdVague != ''"> and t.concentrator_id like concat('%',#{concentratorIdVague},'%') </if>
            <if test="createUser != null and createUser != ''"> and t.create_user = #{createUser} </if>
    		<if test="createUserVague != null and createUserVague != ''"> and t.create_user like concat('%',#{createUserVague},'%') </if>
            <if test="createTime != null and createTime != ''"> and t.create_time = #{createTime} </if>
    		<if test="createTimeVague != null and createTimeVague != ''"> and t.create_time like concat('%',#{createTimeVague},'%') </if>
            <if test="updateUser != null and updateUser != ''"> and t.update_user = #{updateUser} </if>
    		<if test="updateUserVague != null and updateUserVague != ''"> and t.update_user like concat('%',#{updateUserVague},'%') </if>
            <if test="updateTime != null and updateTime != ''"> and t.update_time = #{updateTime} </if>
    		<if test="updateTimeVague != null and updateTimeVague != ''"> and t.update_time like concat('%',#{updateTimeVague},'%') </if>
            <if test="delFlag != null and delFlag != ''"> and t.del_flag = #{delFlag} </if>
    		<if test="delFlagVague != null and delFlagVague != ''"> and t.del_flag like concat('%',#{delFlagVague},'%') </if>
        </where>
    </sql>
	 
	<insert id="save" parameterType="xin.cymall.entity.EnCollector" useGeneratedKeys="true" keyProperty="id">
		insert into en_collector
		(
			`id`,
			`collector_name`, 
			`collector_model`, 
			`concentrator_id`, 
			`create_user`, 
			`create_time`, 
			`update_user`, 
			`update_time`, 
			`del_flag`
		)
		values
		(
			#{id},
			#{collectorName}, 
			#{collectorModel}, 
			#{concentratorId}, 
			#{createUser}, 
			#{createTime}, 
			#{updateUser}, 
			#{updateTime}, 
			0
		)
	</insert>
	 
	<update id="update" parameterType="xin.cymall.entity.EnCollector">
		update en_collector 
		<set>
			<if test="collectorName != null">`collector_name` = #{collectorName}, </if>
			<if test="collectorModel != null">`collector_model` = #{collectorModel}, </if>
			<if test="concentratorId != null">`concentrator_id` = #{concentratorId}, </if>
			<if test="createUser != null">`create_user` = #{createUser}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateUser != null">`update_user` = #{updateUser}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		update en_collector set del_flag = 1 where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		update en_collector set del_flag = 1 where id in
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>